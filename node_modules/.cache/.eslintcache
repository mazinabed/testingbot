[{"/Users/mazinabed/Desktop/testingbot/src/index.js":"1","/Users/mazinabed/Desktop/testingbot/src/db/db.js":"2","/Users/mazinabed/Desktop/testingbot/src/Components/Card/Card.jsx":"3","/Users/mazinabed/Desktop/testingbot/src/Components/Cart/Cart.jsx":"4","/Users/mazinabed/Desktop/testingbot/src/Components/Button/Button.jsx":"5","/Users/mazinabed/Desktop/testingbot/src/App.js":"6"},{"size":254,"mtime":1652015666000,"results":"7","hashOfConfig":"8"},{"size":789,"mtime":1652015666000,"results":"9","hashOfConfig":"8"},{"size":1067,"mtime":1652015666000,"results":"10","hashOfConfig":"8"},{"size":636,"mtime":1652015666000,"results":"11","hashOfConfig":"8"},{"size":400,"mtime":1652015666000,"results":"12","hashOfConfig":"8"},{"size":5705,"mtime":1703631876852,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i3byeg",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/Users/mazinabed/Desktop/testingbot/src/index.js",[],[],"/Users/mazinabed/Desktop/testingbot/src/db/db.js",[],[],[],"/Users/mazinabed/Desktop/testingbot/src/Components/Card/Card.jsx",["35"],[],"import React, { useState } from \"react\";\nimport \"./Card.css\";\nimport Button from \"../Button/Button\";\nfunction Card({ food, onAdd, onRemove }) {\n  const [count, setCount] = useState(0);\n  const { title, Image, price, id } = food;\n\n  const handleIncrement = () => {\n    setCount(count + 1);\n    onAdd(food);\n  };\n  const handleDecrement = () => {\n    setCount(count - 1);\n    onRemove(food);\n  };\n\n  return (\n    <div className=\"card\">\n      <span\n        className={`${count !== 0 ? \"card__badge\" : \"card__badge--hidden\"}`}\n      >\n        {count}\n      </span>\n      <div className=\"image__container\">\n        <img src={Image} alt={title} />\n      </div>\n      <h4 className=\"card__title\">\n        {title} . <span className=\"card__price\">$ {price}</span>\n      </h4>\n\n      <div className=\"btn-container\">\n        <Button title={\"+\"} type={\"add\"} onClick={handleIncrement} />\n        {count !== 0 ? (\n          <Button title={\"-\"} type={\"remove\"} onClick={handleDecrement} />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","/Users/mazinabed/Desktop/testingbot/src/Components/Cart/Cart.jsx",[],[],"/Users/mazinabed/Desktop/testingbot/src/Components/Button/Button.jsx",[],[],"/Users/mazinabed/Desktop/testingbot/src/App.js",["36","37"],[],"// import { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import Card from \"./Components/Card/Card\";\n// import Cart from \"./Components/Cart/Cart\";\n// const { getData } = require(\"./db/db\");\n// const foods = getData();\n\n// const tele = window.Telegram.WebApp;\n\n// function App() {\n//   const [cartItems, setCartItems] = useState([]);\n\n//   useEffect(() => {\n//     tele.ready();\n//   });\n\n//   const onAdd = (food) => {\n//     const exist = cartItems.find((x) => x.id === food.id);\n//     if (exist) {\n//       setCartItems(\n//         cartItems.map((x) =>\n//           x.id === food.id ? { ...exist, quantity: exist.quantity + 1 } : x\n//         )\n//       );\n//     } else {\n//       setCartItems([...cartItems, { ...food, quantity: 1 }]);\n//     }\n//   };\n\n//   const onRemove = (food) => {\n//     const exist = cartItems.find((x) => x.id === food.id);\n//     if (exist.quantity === 1) {\n//       setCartItems(cartItems.filter((x) => x.id !== food.id));\n//     } else {\n//       setCartItems(\n//         cartItems.map((x) =>\n//           x.id === food.id ? { ...exist, quantity: exist.quantity - 1 } : x\n//         )\n//       );\n//     }\n//   };\n  \n\n//   const onCheckout = () => {\n//     const dataToSend = {\n//       cartItems: cartItems,\n//       // Add any other relevant data you want to send\n//     };\n//     // tele.MainButton.text = \"Pay :)\";\n//     // tele.MainButton.show();\n//       // Optionally, you can send the selected items to the bot immediately\n//       tele.MainButton.setText('Pay :)').show().onClick(function () {\n//         const jsonData = JSON.stringify(dataToSend);\n//         //const data = {cartItems};\n//         // JSON.stringify({\n//         //   username: document.querySelector('input[name=username]').value,\n//         //   password: document.querySelector('input[name=password]').value,\n//         //   date_start: document.querySelector('input[name=dates]').value,\n//         //   date_end: document.querySelector('input[name=datee]').value,\n//         //   ei_type: document.getElementsByName('ei_type')[0].value,\n//         //   download_ei: [].filter.call(document.getElementsByName('download_ei'), (c) => c.checked).map(c => c.value)\n//         //  });\n//         Telegram.WebApp.sendData(jsonData);\n//         Telegram.WebApp.close();\n//     });\n//     // tele.MainButton.setText('Pay :)').show().onClick(function () {\n//     //   Telegram.WebApp.sendData(\"Simple text message\");\n//     //   Telegram.WebApp.close();\n//     // });\n    \n//   };\n  \n\n//   return (\n//     <>\n//       <h1 className=\"heading\">Order Food</h1>\n//       <Cart cartItems={cartItems} onCheckout={onCheckout}/>\n//       <div className=\"cards__container\">\n//         {foods.map((food) => {\n//           return (\n//             <Card food={food} key={food.id} onAdd={onAdd} onRemove={onRemove} />\n//           );\n//         })}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default App;\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Card from \"./Components/Card/Card\";\nimport Cart from \"./Components/Cart/Cart\";\nconst { getData } = require(\"./db/db\");\nconst foods = getData();\n\nconst tele = window.Telegram.WebApp;\n\nfunction App() {\n  const [cartItems, setCartItems] = useState([]);\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n\n  useEffect(() => {\n    tele.ready();\n  });\n\n  const onAdd = (food) => {\n    const exist = cartItems.find((x) => x.id === food.id);\n    if (exist) {\n      setCartItems(\n        cartItems.map((x) =>\n          x.id === food.id ? { ...exist, quantity: exist.quantity + 1 } : x\n        )\n      );\n    } else {\n      setCartItems([...cartItems, { ...food, quantity: 1 }]);\n    }\n  };\n\n  const onRemove = (food) => {\n    const exist = cartItems.find((x) => x.id === food.id);\n    if (exist.quantity === 1) {\n      setCartItems(cartItems.filter((x) => x.id !== food.id));\n    } else {\n      setCartItems(\n        cartItems.map((x) =>\n          x.id === food.id ? { ...exist, quantity: exist.quantity - 1 } : x\n        )\n      );\n    }\n  };\n\n  const onCheckout = () => {\n    const dataToSend = {\n      cartItems: cartItems,\n      phoneNumber: phoneNumber,\n      address: address,\n      // Add any other relevant data you want to send\n    };\n\n    tele.MainButton.setText('Pay :)').show().onClick(function () {\n      const jsonData = JSON.stringify(dataToSend);\n      Telegram.WebApp.sendData(jsonData);\n      Telegram.WebApp.close();\n    });\n  };\n\n  return (\n    <>\n      <h1 className=\"heading\">Order Food</h1>\n      <div>\n        <label>\n          Phone Number:\n          <input\n            type=\"text\"\n            value={phoneNumber}\n            onChange={(e) => setPhoneNumber(e.target.value)}\n            style={{\n              padding: '8px',\n              fontSize: '14px',\n              borderRadius: '5px',\n              border: '1px solid #ccc',\n              width: '100%',\n            }}\n          />\n        </label>\n\n      </div>\n      <div>\n        <label>\n          Address:\n          <input\n            type=\"text\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            style={{\n              padding: '8px',\n              fontSize: '14px',\n              borderRadius: '5px',\n              border: '1px solid #ccc',\n              width: '100%',\n            }}\n          />\n        </label>\n      </div>\n      <Cart cartItems={cartItems} onCheckout={onCheckout} />\n      <div className=\"cards__container\">\n        {foods.map((food) => {\n          return (\n            <Card food={food} key={food.id} onAdd={onAdd} onRemove={onRemove} />\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n",{"ruleId":"38","severity":1,"message":"39","line":6,"column":32,"nodeType":"40","messageId":"41","endLine":6,"endColumn":34},{"ruleId":"42","severity":2,"message":"43","line":144,"column":7,"nodeType":"40","messageId":"44","endLine":144,"endColumn":15},{"ruleId":"42","severity":2,"message":"43","line":145,"column":7,"nodeType":"40","messageId":"44","endLine":145,"endColumn":15},"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","no-undef","'Telegram' is not defined.","undef"]