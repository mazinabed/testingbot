[{"/Users/mazinabed/Desktop/testingbot/src/index.js":"1","/Users/mazinabed/Desktop/testingbot/src/db/db.js":"2","/Users/mazinabed/Desktop/testingbot/src/Components/Card/Card.jsx":"3","/Users/mazinabed/Desktop/testingbot/src/Components/Cart/Cart.jsx":"4","/Users/mazinabed/Desktop/testingbot/src/Components/Button/Button.jsx":"5","/Users/mazinabed/Desktop/testingbot/src/App.js":"6","/Users/mazinabed/Desktop/testingbot/src/Components/Footer/index.js":"7","/Users/mazinabed/Desktop/testingbot/src/Components/Navbar.js":"8","/Users/mazinabed/Desktop/testingbot/src/Components/Header.js":"9"},{"size":254,"mtime":1652015666000,"results":"10","hashOfConfig":"11"},{"size":809,"mtime":1703792328459,"results":"12","hashOfConfig":"11"},{"size":1068,"mtime":1703780599226,"results":"13","hashOfConfig":"11"},{"size":670,"mtime":1703846201616,"results":"14","hashOfConfig":"11"},{"size":400,"mtime":1652015666000,"results":"15","hashOfConfig":"11"},{"size":7100,"mtime":1703845951284,"results":"16","hashOfConfig":"11"},{"size":814,"mtime":1703846790756,"results":"17","hashOfConfig":"11"},{"size":633,"mtime":1703844798922,"results":"18","hashOfConfig":"11"},{"size":305,"mtime":1703845879559,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i3byeg",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/mazinabed/Desktop/testingbot/src/index.js",[],[],"/Users/mazinabed/Desktop/testingbot/src/db/db.js",[],[],"/Users/mazinabed/Desktop/testingbot/src/Components/Card/Card.jsx",["50"],[],"/Users/mazinabed/Desktop/testingbot/src/Components/Cart/Cart.jsx",[],[],"/Users/mazinabed/Desktop/testingbot/src/Components/Button/Button.jsx",[],[],[],"/Users/mazinabed/Desktop/testingbot/src/App.js",["51"],[],"// import { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import Card from \"./Components/Card/Card\";\n// import Cart from \"./Components/Cart/Cart\";\n// const { getData } = require(\"./db/db\");\n// const foods = getData();\n\n// const tele = window.Telegram.WebApp;\n\n// function App() {\n//   const [cartItems, setCartItems] = useState([]);\n\n//   useEffect(() => {\n//     tele.ready();\n//   });\n\n//   const onAdd = (food) => {\n//     const exist = cartItems.find((x) => x.id === food.id);\n//     if (exist) {\n//       setCartItems(\n//         cartItems.map((x) =>\n//           x.id === food.id ? { ...exist, quantity: exist.quantity + 1 } : x\n//         )\n//       );\n//     } else {\n//       setCartItems([...cartItems, { ...food, quantity: 1 }]);\n//     }\n//   };\n\n//   const onRemove = (food) => {\n//     const exist = cartItems.find((x) => x.id === food.id);\n//     if (exist.quantity === 1) {\n//       setCartItems(cartItems.filter((x) => x.id !== food.id));\n//     } else {\n//       setCartItems(\n//         cartItems.map((x) =>\n//           x.id === food.id ? { ...exist, quantity: exist.quantity - 1 } : x\n//         )\n//       );\n//     }\n//   };\n  \n\n//   const onCheckout = () => {\n//     const dataToSend = {\n//       cartItems: cartItems,\n//       // Add any other relevant data you want to send\n//     };\n//     // tele.MainButton.text = \"Pay :)\";\n//     // tele.MainButton.show();\n//       // Optionally, you can send the selected items to the bot immediately\n//       tele.MainButton.setText('Pay :)').show().onClick(function () {\n//         const jsonData = JSON.stringify(dataToSend);\n//         //const data = {cartItems};\n//         // JSON.stringify({\n//         //   username: document.querySelector('input[name=username]').value,\n//         //   password: document.querySelector('input[name=password]').value,\n//         //   date_start: document.querySelector('input[name=dates]').value,\n//         //   date_end: document.querySelector('input[name=datee]').value,\n//         //   ei_type: document.getElementsByName('ei_type')[0].value,\n//         //   download_ei: [].filter.call(document.getElementsByName('download_ei'), (c) => c.checked).map(c => c.value)\n//         //  });\n//         Telegram.WebApp.sendData(jsonData);\n//         Telegram.WebApp.close();\n//     });\n//     // tele.MainButton.setText('Pay :)').show().onClick(function () {\n//     //   Telegram.WebApp.sendData(\"Simple text message\");\n//     //   Telegram.WebApp.close();\n//     // });\n    \n//   };\n  \n\n//   return (\n//     <>\n//       <h1 className=\"heading\">Order Food</h1>\n//       <Cart cartItems={cartItems} onCheckout={onCheckout}/>\n//       <div className=\"cards__container\">\n//         {foods.map((food) => {\n//           return (\n//             <Card food={food} key={food.id} onAdd={onAdd} onRemove={onRemove} />\n//           );\n//         })}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default App;\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Card from \"./Components/Card/Card\";\nimport Cart from \"./Components/Cart/Cart\";\nimport Footer from './Components/Footer';\nimport Navbar from './Components/Navbar';\nimport Header from './Components/Header';\nconst { getData } = require(\"./db/db\");\nconst foods = getData();\n\nconst tele = window.Telegram.WebApp;\n\nfunction App() {\n  const [cartItems, setCartItems] = useState([]);\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [notice, setNotice] = useState(\"\");\n\n  useEffect(() => {\n    tele.ready();\n  });\n\n  const onAdd = (food) => {\n    const exist = cartItems.find((x) => x.id === food.id);\n    if (exist) {\n      setCartItems(\n        cartItems.map((x) =>\n          x.id === food.id ? { ...exist, quantity: exist.quantity + 1 } : x\n        )\n      );\n    } else {\n      setCartItems([...cartItems, { ...food, quantity: 1 }]);\n    }\n  };\n\n  const onRemove = (food) => {\n    const exist = cartItems.find((x) => x.id === food.id);\n    if (exist.quantity === 1) {\n      setCartItems(cartItems.filter((x) => x.id !== food.id));\n    } else {\n      setCartItems(\n        cartItems.map((x) =>\n          x.id === food.id ? { ...exist, quantity: exist.quantity - 1 } : x\n        )\n      );\n    }\n  };\n\n  const onCheckout = () => {\n    const dataToSend = {\n      cartItems: cartItems,\n      phoneNumber: phoneNumber,\n      address: address,\n      notice: notice,\n      // Add any other relevant data you want to send\n    };\n\n    tele.MainButton.setText('ارسل الطلب').show().onClick(function () {\n      const jsonData = JSON.stringify(dataToSend);\n      tele.Telegram.WebApp.sendData(jsonData);\n      tele.Telegram.WebApp.close();\n    });\n  };\n\n  return (\n    <>\n      <Header />\n     \n      <div>\n        <label \n        style={{\n              padding: '8px',\n              fontSize: '14px',\n            \n              margin: '10px'\n            }}>\n          رقم الهاتف:\n          <input\n            type=\"text\"\n            placeholder=\"ادخل رقم الهاتف\"\n            value={phoneNumber}\n            onChange={(e) => setPhoneNumber(e.target.value)}\n            style={{\n              padding: '8px',\n              fontSize: '14px',\n              borderRadius: '5px',\n              border: '1px solid #ccc',\n              width: '70%',\n              margin: '20px',\n              alignContent: 'center'\n            }}\n          />\n        </label>\n\n      </div>\n      <div>\n        <label \n         style={{\n              padding: '8px',\n              fontSize: '14px',\n            \n              margin: '10px'\n            }}>\n          اعنوان الكامل:\n          <input\n            type=\"text\"\n            placeholder=\"اكتب العنوان الكامل مع اقرب نقطة دالة\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            style={{\n              padding: '8px',\n              fontSize: '14px',\n              borderRadius: '5px',\n              border: '1px solid #ccc',\n              width: '70%',\n              margin: '20px'\n            }}\n          />\n        </label>\n      </div>\n      <div>\n        <label style={{\n          padding: '8px',\n          fontSize: '14px',\n          margin: '10px'\n        }}>\n          الملاحظات\n          <input\n            type=\"text\"\n            placeholder=\"اكتب الملاحظات او التعليمات للطلب\"\n            value={notice}\n            onChange={(e) => setNotice(e.target.value)}\n            style={{\n              padding: '8px',\n              fontSize: '14px',\n              borderRadius: '5px',\n              border: '1px solid #ccc',\n              width: '70%',\n              margin: '20px'\n            }}\n          />\n        </label>\n      </div>\n      <Cart cartItems={cartItems} onCheckout={onCheckout} />\n      <div className=\"cards__container\">\n        {foods.map((food) => {\n          return (\n            <Card food={food} key={food.id} onAdd={onAdd} onRemove={onRemove} />\n          );\n        })}\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n",[],"/Users/mazinabed/Desktop/testingbot/src/Components/Footer/index.js",[],[],"/Users/mazinabed/Desktop/testingbot/src/Components/Navbar.js",[],[],"/Users/mazinabed/Desktop/testingbot/src/Components/Header.js",[],[],{"ruleId":"52","severity":1,"message":"53","line":6,"column":32,"nodeType":"54","messageId":"55","endLine":6,"endColumn":34},{"ruleId":"52","severity":1,"message":"56","line":95,"column":8,"nodeType":"54","messageId":"55","endLine":95,"endColumn":14},"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'Navbar' is defined but never used."]