{"ast":null,"code":"\"use strict\";\n/** @format */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Composer = void 0;\n\nconst context_1 = require(\"./context\");\n\nfunction always(x) {\n  return () => x;\n}\n\nconst anoop = always(Promise.resolve());\n\nclass Composer {\n  constructor() {\n    for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n      fns[_key] = arguments[_key];\n    }\n\n    this.handler = Composer.compose(fns);\n  }\n  /**\n   * Registers a middleware.\n   */\n\n\n  use() {\n    for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      fns[_key2] = arguments[_key2];\n    }\n\n    this.handler = Composer.compose([this.handler, ...fns]);\n    return this;\n  }\n  /**\n   * Registers middleware for handling updates\n   * matching given type guard function.\n   */\n\n\n  guard(guardFn) {\n    for (var _len3 = arguments.length, fns = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      fns[_key3 - 1] = arguments[_key3];\n    }\n\n    return this.use(Composer.guard(guardFn, ...fns));\n  }\n  /**\n   * Registers middleware for handling provided update types.\n   */\n\n\n  on(updateType) {\n    for (var _len4 = arguments.length, fns = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      fns[_key4 - 1] = arguments[_key4];\n    }\n\n    return this.use(Composer.on(updateType, ...fns));\n  }\n  /**\n   * Registers middleware for handling matching text messages.\n   */\n\n\n  hears(triggers) {\n    for (var _len5 = arguments.length, fns = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      fns[_key5 - 1] = arguments[_key5];\n    }\n\n    return this.use(Composer.hears(triggers, ...fns));\n  }\n  /**\n   * Registers middleware for handling specified commands.\n   */\n\n\n  command(command) {\n    for (var _len6 = arguments.length, fns = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      fns[_key6 - 1] = arguments[_key6];\n    }\n\n    return this.use(Composer.command(command, ...fns));\n  }\n  /**\n   * Registers middleware for handling matching callback queries.\n   */\n\n\n  action(triggers) {\n    for (var _len7 = arguments.length, fns = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n      fns[_key7 - 1] = arguments[_key7];\n    }\n\n    return this.use(Composer.action(triggers, ...fns));\n  }\n  /**\n   * Registers middleware for handling matching inline queries.\n   */\n\n\n  inlineQuery(triggers) {\n    for (var _len8 = arguments.length, fns = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n      fns[_key8 - 1] = arguments[_key8];\n    }\n\n    return this.use(Composer.inlineQuery(triggers, ...fns));\n  }\n  /**\n   * Registers middleware for handling game queries\n   */\n\n\n  gameQuery() {\n    return this.use(Composer.gameQuery(...arguments));\n  }\n  /**\n   * Registers middleware for dropping matching updates.\n   */\n\n\n  drop(predicate) {\n    return this.use(Composer.drop(predicate));\n  }\n\n  filter(predicate) {\n    return this.use(Composer.filter(predicate));\n  }\n\n  entity(predicate) {\n    for (var _len9 = arguments.length, fns = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {\n      fns[_key9 - 1] = arguments[_key9];\n    }\n\n    return this.use(Composer.entity(predicate, ...fns));\n  }\n\n  email(email) {\n    for (var _len10 = arguments.length, fns = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {\n      fns[_key10 - 1] = arguments[_key10];\n    }\n\n    return this.use(Composer.email(email, ...fns));\n  }\n\n  url(url) {\n    for (var _len11 = arguments.length, fns = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n      fns[_key11 - 1] = arguments[_key11];\n    }\n\n    return this.use(Composer.url(url, ...fns));\n  }\n\n  textLink(link) {\n    for (var _len12 = arguments.length, fns = new Array(_len12 > 1 ? _len12 - 1 : 0), _key12 = 1; _key12 < _len12; _key12++) {\n      fns[_key12 - 1] = arguments[_key12];\n    }\n\n    return this.use(Composer.textLink(link, ...fns));\n  }\n\n  textMention(mention) {\n    for (var _len13 = arguments.length, fns = new Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {\n      fns[_key13 - 1] = arguments[_key13];\n    }\n\n    return this.use(Composer.textMention(mention, ...fns));\n  }\n\n  mention(mention) {\n    for (var _len14 = arguments.length, fns = new Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {\n      fns[_key14 - 1] = arguments[_key14];\n    }\n\n    return this.use(Composer.mention(mention, ...fns));\n  }\n\n  phone(number) {\n    for (var _len15 = arguments.length, fns = new Array(_len15 > 1 ? _len15 - 1 : 0), _key15 = 1; _key15 < _len15; _key15++) {\n      fns[_key15 - 1] = arguments[_key15];\n    }\n\n    return this.use(Composer.phone(number, ...fns));\n  }\n\n  hashtag(hashtag) {\n    for (var _len16 = arguments.length, fns = new Array(_len16 > 1 ? _len16 - 1 : 0), _key16 = 1; _key16 < _len16; _key16++) {\n      fns[_key16 - 1] = arguments[_key16];\n    }\n\n    return this.use(Composer.hashtag(hashtag, ...fns));\n  }\n\n  cashtag(cashtag) {\n    for (var _len17 = arguments.length, fns = new Array(_len17 > 1 ? _len17 - 1 : 0), _key17 = 1; _key17 < _len17; _key17++) {\n      fns[_key17 - 1] = arguments[_key17];\n    }\n\n    return this.use(Composer.cashtag(cashtag, ...fns));\n  }\n\n  spoiler(text) {\n    for (var _len18 = arguments.length, fns = new Array(_len18 > 1 ? _len18 - 1 : 0), _key18 = 1; _key18 < _len18; _key18++) {\n      fns[_key18 - 1] = arguments[_key18];\n    }\n\n    return this.use(Composer.spoiler(text, ...fns));\n  }\n  /**\n   * Registers a middleware for handling /start\n   */\n\n\n  start() {\n    for (var _len19 = arguments.length, fns = new Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n      fns[_key19] = arguments[_key19];\n    }\n\n    const handler = Composer.compose(fns);\n    return this.command('start', (ctx, next) => {\n      // First entity is the /start bot_command itself\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const entity = ctx.message.entities[0];\n      const startPayload = ctx.message.text.slice(entity.length + 1);\n      return handler(Object.assign(ctx, {\n        startPayload\n      }), next);\n    });\n  }\n  /**\n   * Registers a middleware for handling /help\n   */\n\n\n  help() {\n    for (var _len20 = arguments.length, fns = new Array(_len20), _key20 = 0; _key20 < _len20; _key20++) {\n      fns[_key20] = arguments[_key20];\n    }\n\n    return this.command('help', ...fns);\n  }\n  /**\n   * Registers a middleware for handling /settings\n   */\n\n\n  settings() {\n    for (var _len21 = arguments.length, fns = new Array(_len21), _key21 = 0; _key21 < _len21; _key21++) {\n      fns[_key21] = arguments[_key21];\n    }\n\n    return this.command('settings', ...fns);\n  }\n\n  middleware() {\n    return this.handler;\n  }\n\n  static reply() {\n    for (var _len22 = arguments.length, args = new Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {\n      args[_key22] = arguments[_key22];\n    }\n\n    return ctx => ctx.reply(...args);\n  }\n\n  static catch(errorHandler) {\n    for (var _len23 = arguments.length, fns = new Array(_len23 > 1 ? _len23 - 1 : 0), _key23 = 1; _key23 < _len23; _key23++) {\n      fns[_key23 - 1] = arguments[_key23];\n    }\n\n    const handler = Composer.compose(fns); // prettier-ignore\n\n    return (ctx, next) => Promise.resolve(handler(ctx, next)).catch(err => errorHandler(err, ctx));\n  }\n  /**\n   * Generates middleware that runs in the background.\n   */\n\n\n  static fork(middleware) {\n    const handler = Composer.unwrap(middleware);\n    return async (ctx, next) => {\n      await Promise.all([handler(ctx, anoop), next()]);\n    };\n  }\n\n  static tap(middleware) {\n    const handler = Composer.unwrap(middleware);\n    return (ctx, next) => Promise.resolve(handler(ctx, anoop)).then(() => next());\n  }\n  /**\n   * Generates middleware that gives up control to the next middleware.\n   */\n\n\n  static passThru() {\n    return (ctx, next) => next();\n  }\n\n  static lazy(factoryFn) {\n    if (typeof factoryFn !== 'function') {\n      throw new Error('Argument must be a function');\n    }\n\n    return (ctx, next) => Promise.resolve(factoryFn(ctx)).then(middleware => Composer.unwrap(middleware)(ctx, next));\n  }\n\n  static log() {\n    let logFn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : console.log;\n    return (ctx, next) => {\n      logFn(JSON.stringify(ctx.update, null, 2));\n      return next();\n    };\n  }\n  /**\n   * @param trueMiddleware middleware to run if the predicate returns true\n   * @param falseMiddleware middleware to run if the predicate returns false\n   */\n\n\n  static branch(predicate, trueMiddleware, falseMiddleware) {\n    if (typeof predicate !== 'function') {\n      return Composer.unwrap(predicate ? trueMiddleware : falseMiddleware);\n    }\n\n    return Composer.lazy(ctx => Promise.resolve(predicate(ctx)).then(value => value ? trueMiddleware : falseMiddleware));\n  }\n  /**\n   * Generates optional middleware.\n   * @param predicate predicate to decide on a context object whether to run the middleware\n   * @param middleware middleware to run if the predicate returns true\n   */\n\n\n  static optional(predicate) {\n    for (var _len24 = arguments.length, fns = new Array(_len24 > 1 ? _len24 - 1 : 0), _key24 = 1; _key24 < _len24; _key24++) {\n      fns[_key24 - 1] = arguments[_key24];\n    }\n\n    return Composer.branch(predicate, Composer.compose(fns), Composer.passThru());\n  }\n\n  static filter(predicate) {\n    return Composer.branch(predicate, Composer.passThru(), anoop);\n  }\n  /**\n   * Generates middleware for dropping matching updates.\n   */\n\n\n  static drop(predicate) {\n    return Composer.branch(predicate, anoop, Composer.passThru());\n  }\n\n  static dispatch(routeFn, handlers) {\n    return Composer.lazy(ctx => Promise.resolve(routeFn(ctx)).then(value => handlers[value]));\n  } // EXPLANATION FOR THE ts-expect-error ANNOTATIONS\n  // The annotations around function invocations with `...fns` are there\n  // whenever we perform validation logic that the flow analysis of TypeScript\n  // cannot comprehend. We always make sure that the middleware functions are\n  // only invoked with properly constrained context objects, but this cannot be\n  // determined automatically.\n\n  /**\n   * Generates optional middleware based on a predicate that only operates on `ctx.update`.\n   *\n   * Example:\n   * ```ts\n   * import { Composer, Update } from 'telegraf'\n   *\n   * const predicate = (u): u is Update.MessageUpdate => 'message' in u\n   * const middleware = Composer.guard(predicate, (ctx) => {\n   *   const message = ctx.update.message\n   * })\n   * ```\n   *\n   * Note that `Composer.on('message')` is preferred over this.\n   *\n   * @param guardFn predicate to decide whether to run the middleware based on the `ctx.update` object\n   * @param fns middleware to run if the predicate returns true\n   * @see `Composer.optional` for a more generic version of this method that allows the predicate to operate on `ctx` itself\n   */\n\n\n  static guard(guardFn) {\n    for (var _len25 = arguments.length, fns = new Array(_len25 > 1 ? _len25 - 1 : 0), _key25 = 1; _key25 < _len25; _key25++) {\n      fns[_key25 - 1] = arguments[_key25];\n    }\n\n    return Composer.optional(ctx => guardFn(ctx.update), // @ts-expect-error see explanation above\n    ...fns);\n  }\n  /**\n   * Generates middleware for handling provided update types.\n   * @deprecated use `Composer.on`\n   */\n\n\n  static mount(updateType) {\n    for (var _len26 = arguments.length, fns = new Array(_len26 > 1 ? _len26 - 1 : 0), _key26 = 1; _key26 < _len26; _key26++) {\n      fns[_key26 - 1] = arguments[_key26];\n    }\n\n    return Composer.on(updateType, ...fns);\n  }\n  /**\n   * Generates middleware for handling provided update types.\n   */\n\n\n  static on(updateType) {\n    const updateTypes = normalizeTextArguments(updateType);\n\n    const predicate = update => updateTypes.some(type => // Check update type\n    type in update || // Check message sub-type\n    'message' in update && type in update.message);\n\n    for (var _len27 = arguments.length, fns = new Array(_len27 > 1 ? _len27 - 1 : 0), _key27 = 1; _key27 < _len27; _key27++) {\n      fns[_key27 - 1] = arguments[_key27];\n    }\n\n    return Composer.guard(predicate, ...fns);\n  }\n\n  static entity(predicate) {\n    for (var _len28 = arguments.length, fns = new Array(_len28 > 1 ? _len28 - 1 : 0), _key28 = 1; _key28 < _len28; _key28++) {\n      fns[_key28 - 1] = arguments[_key28];\n    }\n\n    if (typeof predicate !== 'function') {\n      const entityTypes = normalizeTextArguments(predicate);\n      return Composer.entity(_ref => {\n        let {\n          type\n        } = _ref;\n        return entityTypes.includes(type);\n      }, ...fns);\n    }\n\n    return Composer.optional(ctx => {\n      var _a;\n\n      const msg = (_a = ctx.message) !== null && _a !== void 0 ? _a : ctx.channelPost;\n\n      if (msg === undefined) {\n        return false;\n      }\n\n      const text = getText(msg);\n      const entities = getEntities(msg);\n      if (text === undefined) return false;\n      return entities.some(entity => predicate(entity, text.substring(entity.offset, entity.offset + entity.length), ctx)); // @ts-expect-error see explanation above\n    }, ...fns);\n  }\n\n  static entityText(entityType, predicate) {\n    for (var _len29 = arguments.length, fns = new Array(_len29 > 2 ? _len29 - 2 : 0), _key29 = 2; _key29 < _len29; _key29++) {\n      fns[_key29 - 2] = arguments[_key29];\n    }\n\n    if (fns.length === 0) {\n      // prettier-ignore\n      return Array.isArray(predicate) // @ts-expect-error predicate is really the middleware\n      ? Composer.entity(entityType, ...predicate) // @ts-expect-error predicate is really the middleware\n      : Composer.entity(entityType, predicate);\n    }\n\n    const triggers = normalizeTriggers(predicate);\n    return Composer.entity((_ref2, value, ctx) => {\n      let {\n        type\n      } = _ref2;\n\n      if (type !== entityType) {\n        return false;\n      }\n\n      for (const trigger of triggers) {\n        // @ts-expect-error define so far unknown property `match`\n        if (ctx.match = trigger(value, ctx)) {\n          return true;\n        }\n      }\n\n      return false; // @ts-expect-error see explanation above\n    }, ...fns);\n  }\n\n  static email(email) {\n    for (var _len30 = arguments.length, fns = new Array(_len30 > 1 ? _len30 - 1 : 0), _key30 = 1; _key30 < _len30; _key30++) {\n      fns[_key30 - 1] = arguments[_key30];\n    }\n\n    return Composer.entityText('email', email, ...fns);\n  }\n\n  static phone(number) {\n    for (var _len31 = arguments.length, fns = new Array(_len31 > 1 ? _len31 - 1 : 0), _key31 = 1; _key31 < _len31; _key31++) {\n      fns[_key31 - 1] = arguments[_key31];\n    }\n\n    return Composer.entityText('phone_number', number, ...fns);\n  }\n\n  static url(url) {\n    for (var _len32 = arguments.length, fns = new Array(_len32 > 1 ? _len32 - 1 : 0), _key32 = 1; _key32 < _len32; _key32++) {\n      fns[_key32 - 1] = arguments[_key32];\n    }\n\n    return Composer.entityText('url', url, ...fns);\n  }\n\n  static textLink(link) {\n    for (var _len33 = arguments.length, fns = new Array(_len33 > 1 ? _len33 - 1 : 0), _key33 = 1; _key33 < _len33; _key33++) {\n      fns[_key33 - 1] = arguments[_key33];\n    }\n\n    return Composer.entityText('text_link', link, ...fns);\n  }\n\n  static textMention(mention) {\n    for (var _len34 = arguments.length, fns = new Array(_len34 > 1 ? _len34 - 1 : 0), _key34 = 1; _key34 < _len34; _key34++) {\n      fns[_key34 - 1] = arguments[_key34];\n    }\n\n    return Composer.entityText('text_mention', mention, ...fns);\n  }\n\n  static mention(mention) {\n    for (var _len35 = arguments.length, fns = new Array(_len35 > 1 ? _len35 - 1 : 0), _key35 = 1; _key35 < _len35; _key35++) {\n      fns[_key35 - 1] = arguments[_key35];\n    }\n\n    return Composer.entityText('mention', normalizeTextArguments(mention, '@'), ...fns);\n  }\n\n  static hashtag(hashtag) {\n    for (var _len36 = arguments.length, fns = new Array(_len36 > 1 ? _len36 - 1 : 0), _key36 = 1; _key36 < _len36; _key36++) {\n      fns[_key36 - 1] = arguments[_key36];\n    }\n\n    return Composer.entityText('hashtag', normalizeTextArguments(hashtag, '#'), ...fns);\n  }\n\n  static cashtag(cashtag) {\n    for (var _len37 = arguments.length, fns = new Array(_len37 > 1 ? _len37 - 1 : 0), _key37 = 1; _key37 < _len37; _key37++) {\n      fns[_key37 - 1] = arguments[_key37];\n    }\n\n    return Composer.entityText('cashtag', normalizeTextArguments(cashtag, '$'), ...fns);\n  }\n\n  static spoiler(text) {\n    for (var _len38 = arguments.length, fns = new Array(_len38 > 1 ? _len38 - 1 : 0), _key38 = 1; _key38 < _len38; _key38++) {\n      fns[_key38 - 1] = arguments[_key38];\n    }\n\n    return Composer.entityText('spoiler', text, ...fns);\n  }\n\n  static match(triggers) {\n    for (var _len39 = arguments.length, fns = new Array(_len39 > 1 ? _len39 - 1 : 0), _key39 = 1; _key39 < _len39; _key39++) {\n      fns[_key39 - 1] = arguments[_key39];\n    }\n\n    const handler = Composer.compose(fns);\n    return (ctx, next) => {\n      var _a, _b, _c, _d;\n\n      const text = (_c = (_b = (_a = getText(ctx.message)) !== null && _a !== void 0 ? _a : getText(ctx.channelPost)) !== null && _b !== void 0 ? _b : getText(ctx.callbackQuery)) !== null && _c !== void 0 ? _c : (_d = ctx.inlineQuery) === null || _d === void 0 ? void 0 : _d.query;\n      if (text === undefined) return next();\n\n      for (const trigger of triggers) {\n        // @ts-expect-error Trust me, TS!\n        const match = trigger(text, ctx);\n\n        if (match) {\n          // @ts-expect-error define so far unknown property `match`\n          return handler(Object.assign(ctx, {\n            match\n          }), next);\n        }\n      }\n\n      return next();\n    };\n  }\n  /**\n   * Generates middleware for handling matching text messages.\n   */\n\n\n  static hears(triggers) {\n    for (var _len40 = arguments.length, fns = new Array(_len40 > 1 ? _len40 - 1 : 0), _key40 = 1; _key40 < _len40; _key40++) {\n      fns[_key40 - 1] = arguments[_key40];\n    }\n\n    return Composer.on('text', Composer.match(normalizeTriggers(triggers), ...fns));\n  }\n  /**\n   * Generates middleware for handling specified commands.\n   */\n\n\n  static command(command) {\n    for (var _len41 = arguments.length, fns = new Array(_len41 > 1 ? _len41 - 1 : 0), _key41 = 1; _key41 < _len41; _key41++) {\n      fns[_key41 - 1] = arguments[_key41];\n    }\n\n    if (fns.length === 0) {\n      // @ts-expect-error command is really the middleware\n      return Composer.entity('bot_command', command);\n    }\n\n    const commands = normalizeTextArguments(command, '/');\n    return Composer.on('text', Composer.lazy(ctx => {\n      var _a;\n\n      const groupCommands = ctx.me && ((_a = ctx.chat) === null || _a === void 0 ? void 0 : _a.type.endsWith('group')) ? commands.map(command => `${command}@${ctx.me}`) : [];\n      return Composer.entity((_ref3, value) => {\n        let {\n          offset,\n          type\n        } = _ref3;\n        return offset === 0 && type === 'bot_command' && (commands.includes(value) || groupCommands.includes(value));\n      }, // @ts-expect-error see explanation above\n      ...fns);\n    }));\n  }\n  /**\n   * Generates middleware for handling matching callback queries.\n   */\n\n\n  static action(triggers) {\n    for (var _len42 = arguments.length, fns = new Array(_len42 > 1 ? _len42 - 1 : 0), _key42 = 1; _key42 < _len42; _key42++) {\n      fns[_key42 - 1] = arguments[_key42];\n    }\n\n    return Composer.on('callback_query', Composer.match(normalizeTriggers(triggers), ...fns));\n  }\n  /**\n   * Generates middleware for handling matching inline queries.\n   */\n\n\n  static inlineQuery(triggers) {\n    for (var _len43 = arguments.length, fns = new Array(_len43 > 1 ? _len43 - 1 : 0), _key43 = 1; _key43 < _len43; _key43++) {\n      fns[_key43 - 1] = arguments[_key43];\n    }\n\n    return Composer.on('inline_query', Composer.match(normalizeTriggers(triggers), ...fns));\n  }\n  /**\n   * Generates middleware responding only to specified users.\n   */\n\n\n  static acl(userId) {\n    for (var _len44 = arguments.length, fns = new Array(_len44 > 1 ? _len44 - 1 : 0), _key44 = 1; _key44 < _len44; _key44++) {\n      fns[_key44 - 1] = arguments[_key44];\n    }\n\n    if (typeof userId === 'function') {\n      return Composer.optional(userId, ...fns);\n    }\n\n    const allowed = Array.isArray(userId) ? userId : [userId]; // prettier-ignore\n\n    return Composer.optional(ctx => !ctx.from || allowed.includes(ctx.from.id), ...fns);\n  }\n\n  static memberStatus(status) {\n    const statuses = Array.isArray(status) ? status : [status];\n\n    for (var _len45 = arguments.length, fns = new Array(_len45 > 1 ? _len45 - 1 : 0), _key45 = 1; _key45 < _len45; _key45++) {\n      fns[_key45 - 1] = arguments[_key45];\n    }\n\n    return Composer.optional(async ctx => {\n      if (ctx.message === undefined) return false;\n      const member = await ctx.getChatMember(ctx.message.from.id);\n      return statuses.includes(member.status);\n    }, ...fns);\n  }\n  /**\n   * Generates middleware responding only to chat admins and chat creator.\n   */\n\n\n  static admin() {\n    for (var _len46 = arguments.length, fns = new Array(_len46), _key46 = 0; _key46 < _len46; _key46++) {\n      fns[_key46] = arguments[_key46];\n    }\n\n    return Composer.memberStatus(['administrator', 'creator'], ...fns);\n  }\n  /**\n   * Generates middleware responding only to chat creator.\n   */\n\n\n  static creator() {\n    for (var _len47 = arguments.length, fns = new Array(_len47), _key47 = 0; _key47 < _len47; _key47++) {\n      fns[_key47] = arguments[_key47];\n    }\n\n    return Composer.memberStatus('creator', ...fns);\n  }\n  /**\n   * Generates middleware running only in specified chat types.\n   */\n\n\n  static chatType(type) {\n    const types = Array.isArray(type) ? type : [type];\n\n    for (var _len48 = arguments.length, fns = new Array(_len48 > 1 ? _len48 - 1 : 0), _key48 = 1; _key48 < _len48; _key48++) {\n      fns[_key48 - 1] = arguments[_key48];\n    }\n\n    return Composer.optional(ctx => {\n      const chat = ctx.chat;\n      return chat !== undefined && types.includes(chat.type);\n    }, ...fns);\n  }\n  /**\n   * Generates middleware running only in private chats.\n   */\n\n\n  static privateChat() {\n    for (var _len49 = arguments.length, fns = new Array(_len49), _key49 = 0; _key49 < _len49; _key49++) {\n      fns[_key49] = arguments[_key49];\n    }\n\n    return Composer.chatType('private', ...fns);\n  }\n  /**\n   * Generates middleware running only in groups and supergroups.\n   */\n\n\n  static groupChat() {\n    for (var _len50 = arguments.length, fns = new Array(_len50), _key50 = 0; _key50 < _len50; _key50++) {\n      fns[_key50] = arguments[_key50];\n    }\n\n    return Composer.chatType(['group', 'supergroup'], ...fns);\n  }\n  /**\n   * Generates middleware for handling game queries.\n   */\n\n\n  static gameQuery() {\n    for (var _len51 = arguments.length, fns = new Array(_len51), _key51 = 0; _key51 < _len51; _key51++) {\n      fns[_key51] = arguments[_key51];\n    }\n\n    return Composer.guard(u => 'callback_query' in u && 'game_short_name' in u.callback_query, ...fns);\n  }\n\n  static unwrap(handler) {\n    if (!handler) {\n      throw new Error('Handler is undefined');\n    }\n\n    return 'middleware' in handler ? handler.middleware() : handler;\n  }\n\n  static compose(middlewares) {\n    if (!Array.isArray(middlewares)) {\n      throw new Error('Middlewares must be an array');\n    }\n\n    if (middlewares.length === 0) {\n      return Composer.passThru();\n    }\n\n    if (middlewares.length === 1) {\n      // Quite literally asserted in the above condition\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return Composer.unwrap(middlewares[0]);\n    }\n\n    return (ctx, next) => {\n      let index = -1;\n      return execute(0, ctx);\n\n      async function execute(i, context) {\n        var _a;\n\n        if (!(context instanceof context_1.default)) {\n          throw new Error('next(ctx) called with invalid context');\n        }\n\n        if (i <= index) {\n          throw new Error('next() called multiple times');\n        }\n\n        index = i;\n        const handler = Composer.unwrap((_a = middlewares[i]) !== null && _a !== void 0 ? _a : next);\n        await handler(context, async function () {\n          let ctx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : context;\n          await execute(i + 1, ctx);\n        });\n      }\n    };\n  }\n\n}\n\nexports.Composer = Composer;\n\nfunction escapeRegExp(s) {\n  // $& means the whole matched string\n  return s.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction normalizeTriggers(triggers) {\n  if (!Array.isArray(triggers)) {\n    triggers = [triggers];\n  }\n\n  return triggers.map(trigger => {\n    if (!trigger) {\n      throw new Error('Invalid trigger');\n    }\n\n    if (typeof trigger === 'function') {\n      return trigger;\n    }\n\n    if (trigger instanceof RegExp) {\n      return function () {\n        let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        trigger.lastIndex = 0;\n        return trigger.exec(value);\n      };\n    }\n\n    const regex = new RegExp(`^${escapeRegExp(trigger)}$`);\n    return value => regex.exec(value);\n  });\n}\n\nfunction getEntities(msg) {\n  var _a, _b;\n\n  if (msg == null) return [];\n  if ('caption_entities' in msg) return (_a = msg.caption_entities) !== null && _a !== void 0 ? _a : [];\n  if ('entities' in msg) return (_b = msg.entities) !== null && _b !== void 0 ? _b : [];\n  return [];\n}\n\nfunction getText(msg) {\n  if (msg == null) return undefined;\n  if ('caption' in msg) return msg.caption;\n  if ('text' in msg) return msg.text;\n  if ('data' in msg) return msg.data;\n  if ('game_short_name' in msg) return msg.game_short_name;\n  return undefined;\n}\n\nfunction normalizeTextArguments(argument) {\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  const args = Array.isArray(argument) ? argument : [argument]; // prettier-ignore\n\n  return args.filter(Boolean).map(arg => prefix && typeof arg === 'string' && !arg.startsWith(prefix) ? `${prefix}${arg}` : arg);\n}\n\nexports.default = Composer;","map":{"version":3,"names":["Object","defineProperty","exports","value","Composer","context_1","require","always","x","anoop","Promise","resolve","constructor","fns","handler","compose","use","guard","guardFn","on","updateType","hears","triggers","command","action","inlineQuery","gameQuery","drop","predicate","filter","entity","email","url","textLink","link","textMention","mention","phone","number","hashtag","cashtag","spoiler","text","start","ctx","next","message","entities","startPayload","slice","length","assign","help","settings","middleware","reply","args","catch","errorHandler","err","fork","unwrap","all","tap","then","passThru","lazy","factoryFn","Error","log","logFn","console","JSON","stringify","update","branch","trueMiddleware","falseMiddleware","optional","dispatch","routeFn","handlers","mount","updateTypes","normalizeTextArguments","some","type","entityTypes","includes","_a","msg","channelPost","undefined","getText","getEntities","substring","offset","entityText","entityType","Array","isArray","normalizeTriggers","trigger","match","_b","_c","_d","callbackQuery","query","commands","groupCommands","me","chat","endsWith","map","acl","userId","allowed","from","id","memberStatus","status","statuses","member","getChatMember","admin","creator","chatType","types","privateChat","groupChat","u","callback_query","middlewares","index","execute","i","context","default","escapeRegExp","s","replace","RegExp","lastIndex","exec","regex","caption_entities","caption","data","game_short_name","argument","prefix","Boolean","arg","startsWith"],"sources":["/Users/mazinabed/Desktop/testingbot/node_modules/telegraf/lib/composer.js"],"sourcesContent":["\"use strict\";\n/** @format */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Composer = void 0;\nconst context_1 = require(\"./context\");\nfunction always(x) {\n    return () => x;\n}\nconst anoop = always(Promise.resolve());\nclass Composer {\n    constructor(...fns) {\n        this.handler = Composer.compose(fns);\n    }\n    /**\n     * Registers a middleware.\n     */\n    use(...fns) {\n        this.handler = Composer.compose([this.handler, ...fns]);\n        return this;\n    }\n    /**\n     * Registers middleware for handling updates\n     * matching given type guard function.\n     */\n    guard(guardFn, ...fns) {\n        return this.use(Composer.guard(guardFn, ...fns));\n    }\n    /**\n     * Registers middleware for handling provided update types.\n     */\n    on(updateType, ...fns) {\n        return this.use(Composer.on(updateType, ...fns));\n    }\n    /**\n     * Registers middleware for handling matching text messages.\n     */\n    hears(triggers, ...fns) {\n        return this.use(Composer.hears(triggers, ...fns));\n    }\n    /**\n     * Registers middleware for handling specified commands.\n     */\n    command(command, ...fns) {\n        return this.use(Composer.command(command, ...fns));\n    }\n    /**\n     * Registers middleware for handling matching callback queries.\n     */\n    action(triggers, ...fns) {\n        return this.use(Composer.action(triggers, ...fns));\n    }\n    /**\n     * Registers middleware for handling matching inline queries.\n     */\n    inlineQuery(triggers, ...fns) {\n        return this.use(Composer.inlineQuery(triggers, ...fns));\n    }\n    /**\n     * Registers middleware for handling game queries\n     */\n    gameQuery(...fns) {\n        return this.use(Composer.gameQuery(...fns));\n    }\n    /**\n     * Registers middleware for dropping matching updates.\n     */\n    drop(predicate) {\n        return this.use(Composer.drop(predicate));\n    }\n    filter(predicate) {\n        return this.use(Composer.filter(predicate));\n    }\n    entity(predicate, ...fns) {\n        return this.use(Composer.entity(predicate, ...fns));\n    }\n    email(email, ...fns) {\n        return this.use(Composer.email(email, ...fns));\n    }\n    url(url, ...fns) {\n        return this.use(Composer.url(url, ...fns));\n    }\n    textLink(link, ...fns) {\n        return this.use(Composer.textLink(link, ...fns));\n    }\n    textMention(mention, ...fns) {\n        return this.use(Composer.textMention(mention, ...fns));\n    }\n    mention(mention, ...fns) {\n        return this.use(Composer.mention(mention, ...fns));\n    }\n    phone(number, ...fns) {\n        return this.use(Composer.phone(number, ...fns));\n    }\n    hashtag(hashtag, ...fns) {\n        return this.use(Composer.hashtag(hashtag, ...fns));\n    }\n    cashtag(cashtag, ...fns) {\n        return this.use(Composer.cashtag(cashtag, ...fns));\n    }\n    spoiler(text, ...fns) {\n        return this.use(Composer.spoiler(text, ...fns));\n    }\n    /**\n     * Registers a middleware for handling /start\n     */\n    start(...fns) {\n        const handler = Composer.compose(fns);\n        return this.command('start', (ctx, next) => {\n            // First entity is the /start bot_command itself\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const entity = ctx.message.entities[0];\n            const startPayload = ctx.message.text.slice(entity.length + 1);\n            return handler(Object.assign(ctx, { startPayload }), next);\n        });\n    }\n    /**\n     * Registers a middleware for handling /help\n     */\n    help(...fns) {\n        return this.command('help', ...fns);\n    }\n    /**\n     * Registers a middleware for handling /settings\n     */\n    settings(...fns) {\n        return this.command('settings', ...fns);\n    }\n    middleware() {\n        return this.handler;\n    }\n    static reply(...args) {\n        return (ctx) => ctx.reply(...args);\n    }\n    static catch(errorHandler, ...fns) {\n        const handler = Composer.compose(fns);\n        // prettier-ignore\n        return (ctx, next) => Promise.resolve(handler(ctx, next))\n            .catch((err) => errorHandler(err, ctx));\n    }\n    /**\n     * Generates middleware that runs in the background.\n     */\n    static fork(middleware) {\n        const handler = Composer.unwrap(middleware);\n        return async (ctx, next) => {\n            await Promise.all([handler(ctx, anoop), next()]);\n        };\n    }\n    static tap(middleware) {\n        const handler = Composer.unwrap(middleware);\n        return (ctx, next) => Promise.resolve(handler(ctx, anoop)).then(() => next());\n    }\n    /**\n     * Generates middleware that gives up control to the next middleware.\n     */\n    static passThru() {\n        return (ctx, next) => next();\n    }\n    static lazy(factoryFn) {\n        if (typeof factoryFn !== 'function') {\n            throw new Error('Argument must be a function');\n        }\n        return (ctx, next) => Promise.resolve(factoryFn(ctx)).then((middleware) => Composer.unwrap(middleware)(ctx, next));\n    }\n    static log(logFn = console.log) {\n        return (ctx, next) => {\n            logFn(JSON.stringify(ctx.update, null, 2));\n            return next();\n        };\n    }\n    /**\n     * @param trueMiddleware middleware to run if the predicate returns true\n     * @param falseMiddleware middleware to run if the predicate returns false\n     */\n    static branch(predicate, trueMiddleware, falseMiddleware) {\n        if (typeof predicate !== 'function') {\n            return Composer.unwrap(predicate ? trueMiddleware : falseMiddleware);\n        }\n        return Composer.lazy((ctx) => Promise.resolve(predicate(ctx)).then((value) => value ? trueMiddleware : falseMiddleware));\n    }\n    /**\n     * Generates optional middleware.\n     * @param predicate predicate to decide on a context object whether to run the middleware\n     * @param middleware middleware to run if the predicate returns true\n     */\n    static optional(predicate, ...fns) {\n        return Composer.branch(predicate, Composer.compose(fns), Composer.passThru());\n    }\n    static filter(predicate) {\n        return Composer.branch(predicate, Composer.passThru(), anoop);\n    }\n    /**\n     * Generates middleware for dropping matching updates.\n     */\n    static drop(predicate) {\n        return Composer.branch(predicate, anoop, Composer.passThru());\n    }\n    static dispatch(routeFn, handlers) {\n        return Composer.lazy((ctx) => Promise.resolve(routeFn(ctx)).then((value) => handlers[value]));\n    }\n    // EXPLANATION FOR THE ts-expect-error ANNOTATIONS\n    // The annotations around function invocations with `...fns` are there\n    // whenever we perform validation logic that the flow analysis of TypeScript\n    // cannot comprehend. We always make sure that the middleware functions are\n    // only invoked with properly constrained context objects, but this cannot be\n    // determined automatically.\n    /**\n     * Generates optional middleware based on a predicate that only operates on `ctx.update`.\n     *\n     * Example:\n     * ```ts\n     * import { Composer, Update } from 'telegraf'\n     *\n     * const predicate = (u): u is Update.MessageUpdate => 'message' in u\n     * const middleware = Composer.guard(predicate, (ctx) => {\n     *   const message = ctx.update.message\n     * })\n     * ```\n     *\n     * Note that `Composer.on('message')` is preferred over this.\n     *\n     * @param guardFn predicate to decide whether to run the middleware based on the `ctx.update` object\n     * @param fns middleware to run if the predicate returns true\n     * @see `Composer.optional` for a more generic version of this method that allows the predicate to operate on `ctx` itself\n     */\n    static guard(guardFn, ...fns) {\n        return Composer.optional((ctx) => guardFn(ctx.update), \n        // @ts-expect-error see explanation above\n        ...fns);\n    }\n    /**\n     * Generates middleware for handling provided update types.\n     * @deprecated use `Composer.on`\n     */\n    static mount(updateType, ...fns) {\n        return Composer.on(updateType, ...fns);\n    }\n    /**\n     * Generates middleware for handling provided update types.\n     */\n    static on(updateType, ...fns) {\n        const updateTypes = normalizeTextArguments(updateType);\n        const predicate = (update) => updateTypes.some((type) => \n        // Check update type\n        type in update ||\n            // Check message sub-type\n            ('message' in update && type in update.message));\n        return Composer.guard(predicate, ...fns);\n    }\n    static entity(predicate, ...fns) {\n        if (typeof predicate !== 'function') {\n            const entityTypes = normalizeTextArguments(predicate);\n            return Composer.entity(({ type }) => entityTypes.includes(type), ...fns);\n        }\n        return Composer.optional((ctx) => {\n            var _a;\n            const msg = (_a = ctx.message) !== null && _a !== void 0 ? _a : ctx.channelPost;\n            if (msg === undefined) {\n                return false;\n            }\n            const text = getText(msg);\n            const entities = getEntities(msg);\n            if (text === undefined)\n                return false;\n            return entities.some((entity) => predicate(entity, text.substring(entity.offset, entity.offset + entity.length), ctx));\n            // @ts-expect-error see explanation above\n        }, ...fns);\n    }\n    static entityText(entityType, predicate, ...fns) {\n        if (fns.length === 0) {\n            // prettier-ignore\n            return Array.isArray(predicate)\n                // @ts-expect-error predicate is really the middleware\n                ? Composer.entity(entityType, ...predicate)\n                // @ts-expect-error predicate is really the middleware\n                : Composer.entity(entityType, predicate);\n        }\n        const triggers = normalizeTriggers(predicate);\n        return Composer.entity(({ type }, value, ctx) => {\n            if (type !== entityType) {\n                return false;\n            }\n            for (const trigger of triggers) {\n                // @ts-expect-error define so far unknown property `match`\n                if ((ctx.match = trigger(value, ctx))) {\n                    return true;\n                }\n            }\n            return false;\n            // @ts-expect-error see explanation above\n        }, ...fns);\n    }\n    static email(email, ...fns) {\n        return Composer.entityText('email', email, ...fns);\n    }\n    static phone(number, ...fns) {\n        return Composer.entityText('phone_number', number, ...fns);\n    }\n    static url(url, ...fns) {\n        return Composer.entityText('url', url, ...fns);\n    }\n    static textLink(link, ...fns) {\n        return Composer.entityText('text_link', link, ...fns);\n    }\n    static textMention(mention, ...fns) {\n        return Composer.entityText('text_mention', mention, ...fns);\n    }\n    static mention(mention, ...fns) {\n        return Composer.entityText('mention', normalizeTextArguments(mention, '@'), ...fns);\n    }\n    static hashtag(hashtag, ...fns) {\n        return Composer.entityText('hashtag', normalizeTextArguments(hashtag, '#'), ...fns);\n    }\n    static cashtag(cashtag, ...fns) {\n        return Composer.entityText('cashtag', normalizeTextArguments(cashtag, '$'), ...fns);\n    }\n    static spoiler(text, ...fns) {\n        return Composer.entityText('spoiler', text, ...fns);\n    }\n    static match(triggers, ...fns) {\n        const handler = Composer.compose(fns);\n        return (ctx, next) => {\n            var _a, _b, _c, _d;\n            const text = (_c = (_b = (_a = getText(ctx.message)) !== null && _a !== void 0 ? _a : getText(ctx.channelPost)) !== null && _b !== void 0 ? _b : getText(ctx.callbackQuery)) !== null && _c !== void 0 ? _c : (_d = ctx.inlineQuery) === null || _d === void 0 ? void 0 : _d.query;\n            if (text === undefined)\n                return next();\n            for (const trigger of triggers) {\n                // @ts-expect-error Trust me, TS!\n                const match = trigger(text, ctx);\n                if (match) {\n                    // @ts-expect-error define so far unknown property `match`\n                    return handler(Object.assign(ctx, { match }), next);\n                }\n            }\n            return next();\n        };\n    }\n    /**\n     * Generates middleware for handling matching text messages.\n     */\n    static hears(triggers, ...fns) {\n        return Composer.on('text', Composer.match(normalizeTriggers(triggers), ...fns));\n    }\n    /**\n     * Generates middleware for handling specified commands.\n     */\n    static command(command, ...fns) {\n        if (fns.length === 0) {\n            // @ts-expect-error command is really the middleware\n            return Composer.entity('bot_command', command);\n        }\n        const commands = normalizeTextArguments(command, '/');\n        return Composer.on('text', Composer.lazy((ctx) => {\n            var _a;\n            const groupCommands = ctx.me && ((_a = ctx.chat) === null || _a === void 0 ? void 0 : _a.type.endsWith('group'))\n                ? commands.map((command) => `${command}@${ctx.me}`)\n                : [];\n            return Composer.entity(({ offset, type }, value) => offset === 0 &&\n                type === 'bot_command' &&\n                (commands.includes(value) || groupCommands.includes(value)), \n            // @ts-expect-error see explanation above\n            ...fns);\n        }));\n    }\n    /**\n     * Generates middleware for handling matching callback queries.\n     */\n    static action(triggers, ...fns) {\n        return Composer.on('callback_query', Composer.match(normalizeTriggers(triggers), ...fns));\n    }\n    /**\n     * Generates middleware for handling matching inline queries.\n     */\n    static inlineQuery(triggers, ...fns) {\n        return Composer.on('inline_query', Composer.match(normalizeTriggers(triggers), ...fns));\n    }\n    /**\n     * Generates middleware responding only to specified users.\n     */\n    static acl(userId, ...fns) {\n        if (typeof userId === 'function') {\n            return Composer.optional(userId, ...fns);\n        }\n        const allowed = Array.isArray(userId) ? userId : [userId];\n        // prettier-ignore\n        return Composer.optional((ctx) => !ctx.from || allowed.includes(ctx.from.id), ...fns);\n    }\n    static memberStatus(status, ...fns) {\n        const statuses = Array.isArray(status) ? status : [status];\n        return Composer.optional(async (ctx) => {\n            if (ctx.message === undefined)\n                return false;\n            const member = await ctx.getChatMember(ctx.message.from.id);\n            return statuses.includes(member.status);\n        }, ...fns);\n    }\n    /**\n     * Generates middleware responding only to chat admins and chat creator.\n     */\n    static admin(...fns) {\n        return Composer.memberStatus(['administrator', 'creator'], ...fns);\n    }\n    /**\n     * Generates middleware responding only to chat creator.\n     */\n    static creator(...fns) {\n        return Composer.memberStatus('creator', ...fns);\n    }\n    /**\n     * Generates middleware running only in specified chat types.\n     */\n    static chatType(type, ...fns) {\n        const types = Array.isArray(type) ? type : [type];\n        return Composer.optional((ctx) => {\n            const chat = ctx.chat;\n            return chat !== undefined && types.includes(chat.type);\n        }, ...fns);\n    }\n    /**\n     * Generates middleware running only in private chats.\n     */\n    static privateChat(...fns) {\n        return Composer.chatType('private', ...fns);\n    }\n    /**\n     * Generates middleware running only in groups and supergroups.\n     */\n    static groupChat(...fns) {\n        return Composer.chatType(['group', 'supergroup'], ...fns);\n    }\n    /**\n     * Generates middleware for handling game queries.\n     */\n    static gameQuery(...fns) {\n        return Composer.guard((u) => 'callback_query' in u && 'game_short_name' in u.callback_query, ...fns);\n    }\n    static unwrap(handler) {\n        if (!handler) {\n            throw new Error('Handler is undefined');\n        }\n        return 'middleware' in handler ? handler.middleware() : handler;\n    }\n    static compose(middlewares) {\n        if (!Array.isArray(middlewares)) {\n            throw new Error('Middlewares must be an array');\n        }\n        if (middlewares.length === 0) {\n            return Composer.passThru();\n        }\n        if (middlewares.length === 1) {\n            // Quite literally asserted in the above condition\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return Composer.unwrap(middlewares[0]);\n        }\n        return (ctx, next) => {\n            let index = -1;\n            return execute(0, ctx);\n            async function execute(i, context) {\n                var _a;\n                if (!(context instanceof context_1.default)) {\n                    throw new Error('next(ctx) called with invalid context');\n                }\n                if (i <= index) {\n                    throw new Error('next() called multiple times');\n                }\n                index = i;\n                const handler = Composer.unwrap((_a = middlewares[i]) !== null && _a !== void 0 ? _a : next);\n                await handler(context, async (ctx = context) => {\n                    await execute(i + 1, ctx);\n                });\n            }\n        };\n    }\n}\nexports.Composer = Composer;\nfunction escapeRegExp(s) {\n    // $& means the whole matched string\n    return s.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nfunction normalizeTriggers(triggers) {\n    if (!Array.isArray(triggers)) {\n        triggers = [triggers];\n    }\n    return triggers.map((trigger) => {\n        if (!trigger) {\n            throw new Error('Invalid trigger');\n        }\n        if (typeof trigger === 'function') {\n            return trigger;\n        }\n        if (trigger instanceof RegExp) {\n            return (value = '') => {\n                trigger.lastIndex = 0;\n                return trigger.exec(value);\n            };\n        }\n        const regex = new RegExp(`^${escapeRegExp(trigger)}$`);\n        return (value) => regex.exec(value);\n    });\n}\nfunction getEntities(msg) {\n    var _a, _b;\n    if (msg == null)\n        return [];\n    if ('caption_entities' in msg)\n        return (_a = msg.caption_entities) !== null && _a !== void 0 ? _a : [];\n    if ('entities' in msg)\n        return (_b = msg.entities) !== null && _b !== void 0 ? _b : [];\n    return [];\n}\nfunction getText(msg) {\n    if (msg == null)\n        return undefined;\n    if ('caption' in msg)\n        return msg.caption;\n    if ('text' in msg)\n        return msg.text;\n    if ('data' in msg)\n        return msg.data;\n    if ('game_short_name' in msg)\n        return msg.game_short_name;\n    return undefined;\n}\nfunction normalizeTextArguments(argument, prefix = '') {\n    const args = Array.isArray(argument) ? argument : [argument];\n    // prettier-ignore\n    return args\n        .filter(Boolean)\n        .map((arg) => prefix && typeof arg === 'string' && !arg.startsWith(prefix) ? `${prefix}${arg}` : arg);\n}\nexports.default = Composer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}