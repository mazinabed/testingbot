{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint @typescript-eslint/restrict-template-expressions: [ \"error\", { \"allowNumber\": true, \"allowBoolean\": true } ] */\n\nconst crypto = require(\"crypto\");\n\nconst fs = require(\"fs\");\n\nconst https = require(\"https\");\n\nconst path = require(\"path\");\n\nconst node_fetch_1 = require(\"node-fetch\");\n\nconst check_1 = require(\"../helpers/check\");\n\nconst compact_1 = require(\"../helpers/compact\");\n\nconst multipart_stream_1 = require(\"./multipart-stream\");\n\nconst error_1 = require(\"./error\");\n\nconst url_1 = require(\"url\"); // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\nconst debug = require('debug')('telegraf:client');\n\nconst {\n  isStream\n} = multipart_stream_1.default;\nconst WEBHOOK_REPLY_METHOD_ALLOWLIST = new Set(['answerCallbackQuery', 'answerInlineQuery', 'deleteMessage', 'leaveChat', 'sendChatAction']);\nconst DEFAULT_EXTENSIONS = {\n  audio: 'mp3',\n  photo: 'jpg',\n  sticker: 'webp',\n  video: 'mp4',\n  animation: 'mp4',\n  video_note: 'mp4',\n  voice: 'ogg'\n};\nconst DEFAULT_OPTIONS = {\n  apiRoot: 'https://api.telegram.org',\n  apiMode: 'bot',\n  webhookReply: true,\n  agent: new https.Agent({\n    keepAlive: true,\n    keepAliveMsecs: 10000\n  }),\n  attachmentAgent: undefined\n};\n\nfunction includesMedia(payload) {\n  return Object.values(payload).some(value => {\n    if (Array.isArray(value)) {\n      return value.some(_ref => {\n        let {\n          media\n        } = _ref;\n        return media && typeof media === 'object' && (media.source || media.url);\n      });\n    }\n\n    return value && typeof value === 'object' && ((0, check_1.hasProp)(value, 'source') && value.source || (0, check_1.hasProp)(value, 'url') && value.url || (0, check_1.hasPropType)(value, 'media', 'object') && ((0, check_1.hasProp)(value.media, 'source') && value.media.source || (0, check_1.hasProp)(value.media, 'url') && value.media.url));\n  });\n}\n\nfunction replacer(_, value) {\n  if (value == null) return undefined;\n  return value;\n}\n\nfunction buildJSONConfig(payload) {\n  return Promise.resolve({\n    method: 'POST',\n    compress: true,\n    headers: {\n      'content-type': 'application/json',\n      connection: 'keep-alive'\n    },\n    body: JSON.stringify(payload, replacer)\n  });\n}\n\nconst FORM_DATA_JSON_FIELDS = ['results', 'reply_markup', 'mask_position', 'shipping_options', 'errors'];\n\nasync function buildFormDataConfig(payload, agent) {\n  for (const field of FORM_DATA_JSON_FIELDS) {\n    if ((0, check_1.hasProp)(payload, field) && typeof payload[field] !== 'string') {\n      payload[field] = JSON.stringify(payload[field]);\n    }\n  }\n\n  const boundary = crypto.randomBytes(32).toString('hex');\n  const formData = new multipart_stream_1.default(boundary);\n  const tasks = Object.keys(payload).map(key => attachFormValue(formData, key, payload[key], agent));\n  await Promise.all(tasks);\n  return {\n    method: 'POST',\n    compress: true,\n    headers: {\n      'content-type': `multipart/form-data; boundary=${boundary}`,\n      connection: 'keep-alive'\n    },\n    body: formData\n  };\n}\n\nasync function attachFormValue(form, id, value, agent) {\n  if (value == null) {\n    return;\n  }\n\n  if (typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number') {\n    form.addPart({\n      headers: {\n        'content-disposition': `form-data; name=\"${id}\"`\n      },\n      body: `${value}`\n    });\n    return;\n  }\n\n  if (id === 'thumb') {\n    const attachmentId = crypto.randomBytes(16).toString('hex');\n    await attachFormMedia(form, value, attachmentId, agent);\n    return form.addPart({\n      headers: {\n        'content-disposition': `form-data; name=\"${id}\"`\n      },\n      body: `attach://${attachmentId}`\n    });\n  }\n\n  if (Array.isArray(value)) {\n    const items = await Promise.all(value.map(async item => {\n      if (typeof item.media !== 'object') {\n        return await Promise.resolve(item);\n      }\n\n      const attachmentId = crypto.randomBytes(16).toString('hex');\n      await attachFormMedia(form, item.media, attachmentId, agent);\n      return { ...item,\n        media: `attach://${attachmentId}`\n      };\n    }));\n    return form.addPart({\n      headers: {\n        'content-disposition': `form-data; name=\"${id}\"`\n      },\n      body: JSON.stringify(items)\n    });\n  }\n\n  if (value && typeof value === 'object' && (0, check_1.hasProp)(value, 'media') && (0, check_1.hasProp)(value, 'type') && typeof value.media !== 'undefined' && typeof value.type !== 'undefined') {\n    const attachmentId = crypto.randomBytes(16).toString('hex');\n    await attachFormMedia(form, value.media, attachmentId, agent);\n    return form.addPart({\n      headers: {\n        'content-disposition': `form-data; name=\"${id}\"`\n      },\n      body: JSON.stringify({ ...value,\n        media: `attach://${attachmentId}`\n      })\n    });\n  }\n\n  return await attachFormMedia(form, value, id, agent);\n}\n\nasync function attachFormMedia(form, media, id, agent) {\n  var _a, _b, _c;\n\n  let fileName = (_a = media.filename) !== null && _a !== void 0 ? _a : `${id}.${(_b = DEFAULT_EXTENSIONS[id]) !== null && _b !== void 0 ? _b : 'dat'}`;\n\n  if (media.url !== undefined) {\n    const res = await (0, node_fetch_1.default)(media.url, {\n      agent\n    });\n    return form.addPart({\n      headers: {\n        'content-disposition': `form-data; name=\"${id}\"; filename=\"${fileName}\"`\n      },\n      body: res.body\n    });\n  }\n\n  if (media.source) {\n    let mediaSource = media.source;\n\n    if (fs.existsSync(media.source)) {\n      fileName = (_c = media.filename) !== null && _c !== void 0 ? _c : path.basename(media.source);\n      mediaSource = fs.createReadStream(media.source);\n    }\n\n    if (isStream(mediaSource) || Buffer.isBuffer(mediaSource)) {\n      form.addPart({\n        headers: {\n          'content-disposition': `form-data; name=\"${id}\"; filename=\"${fileName}\"`\n        },\n        body: mediaSource\n      });\n    }\n  }\n}\n\nasync function answerToWebhook(response, payload, options) {\n  if (!includesMedia(payload)) {\n    if (!response.headersSent) {\n      response.setHeader('content-type', 'application/json');\n    }\n\n    response.end(JSON.stringify(payload), 'utf-8');\n    return true;\n  }\n\n  const {\n    headers,\n    body\n  } = await buildFormDataConfig(payload, options.attachmentAgent);\n\n  if (!response.headersSent) {\n    for (const [key, value] of Object.entries(headers)) {\n      response.setHeader(key, value);\n    }\n  }\n\n  await new Promise(resolve => {\n    response.on('finish', resolve);\n    body.pipe(response);\n  });\n  return true;\n}\n\nfunction redactToken(error) {\n  error.message = error.message.replace(/\\/(bot|user)(\\d+):[^/]+\\//, '/$1$2:[REDACTED]/');\n  throw error;\n}\n\nclass ApiClient {\n  constructor(token, options, response) {\n    this.token = token;\n    this.response = response;\n    this.options = { ...DEFAULT_OPTIONS,\n      ...(0, compact_1.compactOptions)(options)\n    };\n\n    if (this.options.apiRoot.startsWith('http://')) {\n      this.options.agent = undefined;\n    }\n  }\n  /**\n   * If set to `true`, first _eligible_ call will avoid performing a POST request.\n   * Note that such a call:\n   * 1. cannot report errors or return meaningful values,\n   * 2. resolves before bot API has a chance to process it,\n   * 3. prematurely confirms the update as processed.\n   *\n   * https://core.telegram.org/bots/faq#how-can-i-make-requests-in-response-to-updates\n   * https://github.com/telegraf/telegraf/pull/1250\n   */\n\n\n  set webhookReply(enable) {\n    this.options.webhookReply = enable;\n  }\n\n  get webhookReply() {\n    return this.options.webhookReply;\n  }\n\n  async callApi(method, payload) {\n    let {\n      signal\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const {\n      token,\n      options,\n      response\n    } = this;\n\n    if (options.webhookReply && (response === null || response === void 0 ? void 0 : response.writableEnded) === false && WEBHOOK_REPLY_METHOD_ALLOWLIST.has(method)) {\n      debug('Call via webhook', method, payload); // @ts-expect-error using webhookReply is an optimisation that doesn't respond with normal result\n      // up to the user to deal with this\n\n      return await answerToWebhook(response, {\n        method,\n        ...payload\n      }, options);\n    }\n\n    if (!token) {\n      throw new error_1.default({\n        error_code: 401,\n        description: 'Bot Token is required'\n      });\n    }\n\n    debug('HTTP call', method, payload);\n    const config = includesMedia(payload) ? await buildFormDataConfig({\n      method,\n      ...payload\n    }, options.attachmentAgent) : await buildJSONConfig(payload);\n    const apiUrl = new url_1.URL(`./${options.apiMode}${token}/${method}`, options.apiRoot);\n    config.agent = options.agent;\n    config.signal = signal;\n    const res = await (0, node_fetch_1.default)(apiUrl, config).catch(redactToken);\n\n    if (res.status >= 500) {\n      const errorPayload = {\n        error_code: res.status,\n        description: res.statusText\n      };\n      throw new error_1.default(errorPayload, {\n        method,\n        payload\n      });\n    }\n\n    const data = await res.json();\n\n    if (!data.ok) {\n      debug('API call failed', data);\n      throw new error_1.default(data, {\n        method,\n        payload\n      });\n    }\n\n    return data.result;\n  }\n\n}\n\nexports.default = ApiClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","crypto","require","fs","https","path","node_fetch_1","check_1","compact_1","multipart_stream_1","error_1","url_1","debug","isStream","default","WEBHOOK_REPLY_METHOD_ALLOWLIST","Set","DEFAULT_EXTENSIONS","audio","photo","sticker","video","animation","video_note","voice","DEFAULT_OPTIONS","apiRoot","apiMode","webhookReply","agent","Agent","keepAlive","keepAliveMsecs","attachmentAgent","undefined","includesMedia","payload","values","some","Array","isArray","media","source","url","hasProp","hasPropType","replacer","_","buildJSONConfig","Promise","resolve","method","compress","headers","connection","body","JSON","stringify","FORM_DATA_JSON_FIELDS","buildFormDataConfig","field","boundary","randomBytes","toString","formData","tasks","keys","map","key","attachFormValue","all","form","id","addPart","attachmentId","attachFormMedia","items","item","type","_a","_b","_c","fileName","filename","res","mediaSource","existsSync","basename","createReadStream","Buffer","isBuffer","answerToWebhook","response","options","headersSent","setHeader","end","entries","on","pipe","redactToken","error","message","replace","ApiClient","constructor","token","compactOptions","startsWith","enable","callApi","signal","writableEnded","has","error_code","description","config","apiUrl","URL","catch","status","errorPayload","statusText","data","json","ok","result"],"sources":["/Users/mazinabed/Desktop/testingbot/node_modules/telegraf/lib/core/network/client.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint @typescript-eslint/restrict-template-expressions: [ \"error\", { \"allowNumber\": true, \"allowBoolean\": true } ] */\nconst crypto = require(\"crypto\");\nconst fs = require(\"fs\");\nconst https = require(\"https\");\nconst path = require(\"path\");\nconst node_fetch_1 = require(\"node-fetch\");\nconst check_1 = require(\"../helpers/check\");\nconst compact_1 = require(\"../helpers/compact\");\nconst multipart_stream_1 = require(\"./multipart-stream\");\nconst error_1 = require(\"./error\");\nconst url_1 = require(\"url\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst debug = require('debug')('telegraf:client');\nconst { isStream } = multipart_stream_1.default;\nconst WEBHOOK_REPLY_METHOD_ALLOWLIST = new Set([\n    'answerCallbackQuery',\n    'answerInlineQuery',\n    'deleteMessage',\n    'leaveChat',\n    'sendChatAction',\n]);\nconst DEFAULT_EXTENSIONS = {\n    audio: 'mp3',\n    photo: 'jpg',\n    sticker: 'webp',\n    video: 'mp4',\n    animation: 'mp4',\n    video_note: 'mp4',\n    voice: 'ogg',\n};\nconst DEFAULT_OPTIONS = {\n    apiRoot: 'https://api.telegram.org',\n    apiMode: 'bot',\n    webhookReply: true,\n    agent: new https.Agent({\n        keepAlive: true,\n        keepAliveMsecs: 10000,\n    }),\n    attachmentAgent: undefined,\n};\nfunction includesMedia(payload) {\n    return Object.values(payload).some((value) => {\n        if (Array.isArray(value)) {\n            return value.some(({ media }) => media && typeof media === 'object' && (media.source || media.url));\n        }\n        return (value &&\n            typeof value === 'object' &&\n            (((0, check_1.hasProp)(value, 'source') && value.source) ||\n                ((0, check_1.hasProp)(value, 'url') && value.url) ||\n                ((0, check_1.hasPropType)(value, 'media', 'object') &&\n                    (((0, check_1.hasProp)(value.media, 'source') && value.media.source) ||\n                        ((0, check_1.hasProp)(value.media, 'url') && value.media.url)))));\n    });\n}\nfunction replacer(_, value) {\n    if (value == null)\n        return undefined;\n    return value;\n}\nfunction buildJSONConfig(payload) {\n    return Promise.resolve({\n        method: 'POST',\n        compress: true,\n        headers: { 'content-type': 'application/json', connection: 'keep-alive' },\n        body: JSON.stringify(payload, replacer),\n    });\n}\nconst FORM_DATA_JSON_FIELDS = [\n    'results',\n    'reply_markup',\n    'mask_position',\n    'shipping_options',\n    'errors',\n];\nasync function buildFormDataConfig(payload, agent) {\n    for (const field of FORM_DATA_JSON_FIELDS) {\n        if ((0, check_1.hasProp)(payload, field) && typeof payload[field] !== 'string') {\n            payload[field] = JSON.stringify(payload[field]);\n        }\n    }\n    const boundary = crypto.randomBytes(32).toString('hex');\n    const formData = new multipart_stream_1.default(boundary);\n    const tasks = Object.keys(payload).map((key) => attachFormValue(formData, key, payload[key], agent));\n    await Promise.all(tasks);\n    return {\n        method: 'POST',\n        compress: true,\n        headers: {\n            'content-type': `multipart/form-data; boundary=${boundary}`,\n            connection: 'keep-alive',\n        },\n        body: formData,\n    };\n}\nasync function attachFormValue(form, id, value, agent) {\n    if (value == null) {\n        return;\n    }\n    if (typeof value === 'string' ||\n        typeof value === 'boolean' ||\n        typeof value === 'number') {\n        form.addPart({\n            headers: { 'content-disposition': `form-data; name=\"${id}\"` },\n            body: `${value}`,\n        });\n        return;\n    }\n    if (id === 'thumb') {\n        const attachmentId = crypto.randomBytes(16).toString('hex');\n        await attachFormMedia(form, value, attachmentId, agent);\n        return form.addPart({\n            headers: { 'content-disposition': `form-data; name=\"${id}\"` },\n            body: `attach://${attachmentId}`,\n        });\n    }\n    if (Array.isArray(value)) {\n        const items = await Promise.all(value.map(async (item) => {\n            if (typeof item.media !== 'object') {\n                return await Promise.resolve(item);\n            }\n            const attachmentId = crypto.randomBytes(16).toString('hex');\n            await attachFormMedia(form, item.media, attachmentId, agent);\n            return { ...item, media: `attach://${attachmentId}` };\n        }));\n        return form.addPart({\n            headers: { 'content-disposition': `form-data; name=\"${id}\"` },\n            body: JSON.stringify(items),\n        });\n    }\n    if (value &&\n        typeof value === 'object' &&\n        (0, check_1.hasProp)(value, 'media') &&\n        (0, check_1.hasProp)(value, 'type') &&\n        typeof value.media !== 'undefined' &&\n        typeof value.type !== 'undefined') {\n        const attachmentId = crypto.randomBytes(16).toString('hex');\n        await attachFormMedia(form, value.media, attachmentId, agent);\n        return form.addPart({\n            headers: { 'content-disposition': `form-data; name=\"${id}\"` },\n            body: JSON.stringify({\n                ...value,\n                media: `attach://${attachmentId}`,\n            }),\n        });\n    }\n    return await attachFormMedia(form, value, id, agent);\n}\nasync function attachFormMedia(form, media, id, agent) {\n    var _a, _b, _c;\n    let fileName = (_a = media.filename) !== null && _a !== void 0 ? _a : `${id}.${(_b = DEFAULT_EXTENSIONS[id]) !== null && _b !== void 0 ? _b : 'dat'}`;\n    if (media.url !== undefined) {\n        const res = await (0, node_fetch_1.default)(media.url, { agent });\n        return form.addPart({\n            headers: {\n                'content-disposition': `form-data; name=\"${id}\"; filename=\"${fileName}\"`,\n            },\n            body: res.body,\n        });\n    }\n    if (media.source) {\n        let mediaSource = media.source;\n        if (fs.existsSync(media.source)) {\n            fileName = (_c = media.filename) !== null && _c !== void 0 ? _c : path.basename(media.source);\n            mediaSource = fs.createReadStream(media.source);\n        }\n        if (isStream(mediaSource) || Buffer.isBuffer(mediaSource)) {\n            form.addPart({\n                headers: {\n                    'content-disposition': `form-data; name=\"${id}\"; filename=\"${fileName}\"`,\n                },\n                body: mediaSource,\n            });\n        }\n    }\n}\nasync function answerToWebhook(response, payload, options) {\n    if (!includesMedia(payload)) {\n        if (!response.headersSent) {\n            response.setHeader('content-type', 'application/json');\n        }\n        response.end(JSON.stringify(payload), 'utf-8');\n        return true;\n    }\n    const { headers, body } = await buildFormDataConfig(payload, options.attachmentAgent);\n    if (!response.headersSent) {\n        for (const [key, value] of Object.entries(headers)) {\n            response.setHeader(key, value);\n        }\n    }\n    await new Promise((resolve) => {\n        response.on('finish', resolve);\n        body.pipe(response);\n    });\n    return true;\n}\nfunction redactToken(error) {\n    error.message = error.message.replace(/\\/(bot|user)(\\d+):[^/]+\\//, '/$1$2:[REDACTED]/');\n    throw error;\n}\nclass ApiClient {\n    constructor(token, options, response) {\n        this.token = token;\n        this.response = response;\n        this.options = {\n            ...DEFAULT_OPTIONS,\n            ...(0, compact_1.compactOptions)(options),\n        };\n        if (this.options.apiRoot.startsWith('http://')) {\n            this.options.agent = undefined;\n        }\n    }\n    /**\n     * If set to `true`, first _eligible_ call will avoid performing a POST request.\n     * Note that such a call:\n     * 1. cannot report errors or return meaningful values,\n     * 2. resolves before bot API has a chance to process it,\n     * 3. prematurely confirms the update as processed.\n     *\n     * https://core.telegram.org/bots/faq#how-can-i-make-requests-in-response-to-updates\n     * https://github.com/telegraf/telegraf/pull/1250\n     */\n    set webhookReply(enable) {\n        this.options.webhookReply = enable;\n    }\n    get webhookReply() {\n        return this.options.webhookReply;\n    }\n    async callApi(method, payload, { signal } = {}) {\n        const { token, options, response } = this;\n        if (options.webhookReply &&\n            (response === null || response === void 0 ? void 0 : response.writableEnded) === false &&\n            WEBHOOK_REPLY_METHOD_ALLOWLIST.has(method)) {\n            debug('Call via webhook', method, payload);\n            // @ts-expect-error using webhookReply is an optimisation that doesn't respond with normal result\n            // up to the user to deal with this\n            return await answerToWebhook(response, { method, ...payload }, options);\n        }\n        if (!token) {\n            throw new error_1.default({\n                error_code: 401,\n                description: 'Bot Token is required',\n            });\n        }\n        debug('HTTP call', method, payload);\n        const config = includesMedia(payload)\n            ? await buildFormDataConfig({ method, ...payload }, options.attachmentAgent)\n            : await buildJSONConfig(payload);\n        const apiUrl = new url_1.URL(`./${options.apiMode}${token}/${method}`, options.apiRoot);\n        config.agent = options.agent;\n        config.signal = signal;\n        const res = await (0, node_fetch_1.default)(apiUrl, config).catch(redactToken);\n        if (res.status >= 500) {\n            const errorPayload = {\n                error_code: res.status,\n                description: res.statusText,\n            };\n            throw new error_1.default(errorPayload, { method, payload });\n        }\n        const data = await res.json();\n        if (!data.ok) {\n            debug('API call failed', data);\n            throw new error_1.default(data, { method, payload });\n        }\n        return data.result;\n    }\n}\nexports.default = ApiClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}