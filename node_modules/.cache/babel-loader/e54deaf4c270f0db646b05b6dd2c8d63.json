{"ast":null,"code":"var _jsxFileName = \"/Users/mazinabed/Desktop/testingbot/src/App.js\",\n    _s = $RefreshSig$();\n\n// import { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import Card from \"./Components/Card/Card\";\n// import Cart from \"./Components/Cart/Cart\";\n// const { getData } = require(\"./db/db\");\n// const foods = getData();\n// const tele = window.Telegram.WebApp;\n// function App() {\n//   const [cartItems, setCartItems] = useState([]);\n//   useEffect(() => {\n//     tele.ready();\n//     setBotResponse(\"Welcome! How can I assist you today?\")\n//   },[]);\n//   const onAdd = (food) => {\n//     const exist = cartItems.find((x) => x.id === food.id);\n//     if (exist) {\n//       setCartItems(\n//         cartItems.map((x) =>\n//           x.id === food.id ? { ...exist, quantity: exist.quantity + 1 } : x\n//         )\n//       );\n//     } else {\n//       setCartItems([...cartItems, { ...food, quantity: 1 }]);\n//     }\n//   };\n//   const onRemove = (food) => {\n//     const exist = cartItems.find((x) => x.id === food.id);\n//     if (exist.quantity === 1) {\n//       setCartItems(cartItems.filter((x) => x.id !== food.id));\n//     } else {\n//       setCartItems(\n//         cartItems.map((x) =>\n//           x.id === food.id ? { ...exist, quantity: exist.quantity - 1 } : x\n//         )\n//       );\n//     }\n//   };\n//   const onCheckout = () => {\n//     tele.MainButton.text = \"Pay :)\";\n//     tele.MainButton.show();\n//   };\n//   return (\n//     <>\n//       <h1 className=\"heading\">Order Food</h1>\n//       <Cart cartItems={cartItems} onCheckout={onCheckout}/>\n//       <div className=\"cards__container\">\n//         {foods.map((food) => {\n//           return (\n//             <Card food={food} key={food.id} onAdd={onAdd} onRemove={onRemove} />\n//           );\n//         })}\n//       </div>\n//     </>\n//   );\n// }\n// export default App;\n// App.js\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Card from \"./Components/Card/Card\";\nimport Cart from \"./Components/Cart/Cart\";\nimport { getData } from \"./db/db\";\nimport { sendSelectedItemsToBot } from \"../Bot/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst foods = getData();\nconst tele = window.Telegram.WebApp;\n\nfunction App() {\n  _s();\n\n  const [cartItems, setCartItems] = useState([]);\n  const [botResponse, setBotResponse] = useState(\"\");\n  useEffect(() => {\n    tele.ready(); // Simulate a bot response (replace this with your actual bot interaction logic)\n\n    setBotResponse(\"Welcome! How can I assist you today?\");\n  }, []);\n\n  const onAdd = food => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === food.id);\n\n      if (existingItem) {\n        return prevItems.map(item => item.id === food.id ? { ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        return [...prevItems, { ...food,\n          quantity: 1\n        }];\n      }\n    }); // Update the bot response\n\n    setBotResponse(`Added ${food.title} to your cart.`);\n  };\n\n  const onRemove = food => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === food.id);\n\n      if (existingItem && existingItem.quantity > 1) {\n        return prevItems.map(item => item.id === food.id ? { ...item,\n          quantity: item.quantity - 1\n        } : item);\n      } else {\n        return prevItems.filter(item => item.id !== food.id);\n      }\n    }); // Update the bot response\n\n    setBotResponse(`Removed ${food.title} from your cart.`);\n  };\n\n  const onCheckout = () => {\n    const selectedItems = cartItems.map(item => ({\n      id: item.id,\n      title: item.title,\n      quantity: item.quantity\n    })); // Call the function to send selected items to the bot\n\n    sendSelectedItemsToBot(selectedItems);\n    tele.MainButton.text = \"Pay :)\";\n    tele.MainButton.show();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Order Food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {\n      cartItems: cartItems,\n      onCheckout: onCheckout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards__container\",\n      children: foods.map(food => /*#__PURE__*/_jsxDEV(Card, {\n        food: food,\n        onAdd: onAdd,\n        onRemove: onRemove\n      }, food.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-response\",\n      children: botResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"teU226sSGeXurxVvh+Zg2tPHhcc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Card","Cart","getData","sendSelectedItemsToBot","foods","tele","window","Telegram","WebApp","App","cartItems","setCartItems","botResponse","setBotResponse","ready","onAdd","food","prevItems","existingItem","find","item","id","map","quantity","title","onRemove","filter","onCheckout","selectedItems","MainButton","text","show"],"sources":["/Users/mazinabed/Desktop/testingbot/src/App.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import Card from \"./Components/Card/Card\";\n// import Cart from \"./Components/Cart/Cart\";\n// const { getData } = require(\"./db/db\");\n// const foods = getData();\n\n// const tele = window.Telegram.WebApp;\n\n// function App() {\n//   const [cartItems, setCartItems] = useState([]);\n\n//   useEffect(() => {\n//     tele.ready();\n//     setBotResponse(\"Welcome! How can I assist you today?\")\n//   },[]);\n\n//   const onAdd = (food) => {\n//     const exist = cartItems.find((x) => x.id === food.id);\n//     if (exist) {\n//       setCartItems(\n//         cartItems.map((x) =>\n//           x.id === food.id ? { ...exist, quantity: exist.quantity + 1 } : x\n//         )\n//       );\n//     } else {\n//       setCartItems([...cartItems, { ...food, quantity: 1 }]);\n//     }\n//   };\n\n//   const onRemove = (food) => {\n//     const exist = cartItems.find((x) => x.id === food.id);\n//     if (exist.quantity === 1) {\n//       setCartItems(cartItems.filter((x) => x.id !== food.id));\n//     } else {\n//       setCartItems(\n//         cartItems.map((x) =>\n//           x.id === food.id ? { ...exist, quantity: exist.quantity - 1 } : x\n//         )\n//       );\n//     }\n//   };\n\n//   const onCheckout = () => {\n//     tele.MainButton.text = \"Pay :)\";\n//     tele.MainButton.show();\n//   };\n\n//   return (\n//     <>\n//       <h1 className=\"heading\">Order Food</h1>\n//       <Cart cartItems={cartItems} onCheckout={onCheckout}/>\n//       <div className=\"cards__container\">\n//         {foods.map((food) => {\n//           return (\n//             <Card food={food} key={food.id} onAdd={onAdd} onRemove={onRemove} />\n//           );\n//         })}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default App;\n// App.js\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Card from \"./Components/Card/Card\";\nimport Cart from \"./Components/Cart/Cart\";\nimport { getData } from \"./db/db\";\nimport { sendSelectedItemsToBot } from \"../Bot/\";\n\nconst foods = getData();\nconst tele = window.Telegram.WebApp;\n\nfunction App() {\n  const [cartItems, setCartItems] = useState([]);\n  const [botResponse, setBotResponse] = useState(\"\");\n\n  useEffect(() => {\n    tele.ready();\n    // Simulate a bot response (replace this with your actual bot interaction logic)\n    setBotResponse(\"Welcome! How can I assist you today?\");\n  }, []);\n\n  const onAdd = (food) => {\n    setCartItems((prevItems) => {\n      const existingItem = prevItems.find((item) => item.id === food.id);\n\n      if (existingItem) {\n        return prevItems.map((item) =>\n          item.id === food.id ? { ...item, quantity: item.quantity + 1 } : item\n        );\n      } else {\n        return [...prevItems, { ...food, quantity: 1 }];\n      }\n    });\n\n    // Update the bot response\n    setBotResponse(`Added ${food.title} to your cart.`);\n  };\n\n  const onRemove = (food) => {\n    setCartItems((prevItems) => {\n      const existingItem = prevItems.find((item) => item.id === food.id);\n\n      if (existingItem && existingItem.quantity > 1) {\n        return prevItems.map((item) =>\n          item.id === food.id ? { ...item, quantity: item.quantity - 1 } : item\n        );\n      } else {\n        return prevItems.filter((item) => item.id !== food.id);\n      }\n    });\n\n    // Update the bot response\n    setBotResponse(`Removed ${food.title} from your cart.`);\n  };\n\n  const onCheckout = () => {\n    const selectedItems = cartItems.map((item) => ({\n      id: item.id,\n      title: item.title,\n      quantity: item.quantity,\n    }));\n\n    // Call the function to send selected items to the bot\n    sendSelectedItemsToBot(selectedItems);\n\n    tele.MainButton.text = \"Pay :)\";\n    tele.MainButton.show();\n  };\n\n  return (\n    <>\n      <h1 className=\"heading\">Order Food</h1>\n      <Cart cartItems={cartItems} onCheckout={onCheckout} />\n      <div className=\"cards__container\">\n        {foods.map((food) => (\n          <Card food={food} key={food.id} onAdd={onAdd} onRemove={onRemove} />\n        ))}\n      </div>\n      {/* Display the bot response */}\n      <div className=\"bot-response\">{botResponse}</div>\n    </>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}