{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst debug_1 = require(\"debug\");\n\nconst safeCompare = require(\"safe-compare\");\n\nconst debug = (0, debug_1.default)('telegraf:webhook');\n\nfunction default_1(hookPath, updateHandler) {\n  return async function (req, res) {\n    let next = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : () => {\n      res.statusCode = 403;\n      debug('Replying with status code', res.statusCode);\n      res.end();\n    };\n    debug('Incoming request', req.method, req.url); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    if (req.method !== 'POST' || !safeCompare(hookPath, req.url)) {\n      return next();\n    }\n\n    let update;\n\n    if (req.body != null) {\n      update = req.body;\n      await updateHandler(update, res);\n      return;\n    }\n\n    let body = '';\n\n    for await (const chunk of req) {\n      body += String(chunk);\n    }\n\n    try {\n      update = JSON.parse(body);\n    } catch (error) {\n      res.writeHead(415);\n      res.end();\n      debug('Failed to parse request body:', error);\n      return;\n    }\n\n    await updateHandler(update, res);\n  };\n}\n\nexports.default = default_1;","map":{"version":3,"names":["Object","defineProperty","exports","value","debug_1","require","safeCompare","debug","default","default_1","hookPath","updateHandler","req","res","next","statusCode","end","method","url","update","body","chunk","String","JSON","parse","error","writeHead"],"sources":["/Users/mazinabed/Desktop/testingbot/node_modules/telegraf/lib/core/network/webhook.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debug_1 = require(\"debug\");\nconst safeCompare = require(\"safe-compare\");\nconst debug = (0, debug_1.default)('telegraf:webhook');\nfunction default_1(hookPath, updateHandler) {\n    return async (req, res, next = () => {\n        res.statusCode = 403;\n        debug('Replying with status code', res.statusCode);\n        res.end();\n    }) => {\n        debug('Incoming request', req.method, req.url);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        if (req.method !== 'POST' || !safeCompare(hookPath, req.url)) {\n            return next();\n        }\n        let update;\n        if (req.body != null) {\n            update = req.body;\n            await updateHandler(update, res);\n            return;\n        }\n        let body = '';\n        for await (const chunk of req) {\n            body += String(chunk);\n        }\n        try {\n            update = JSON.parse(body);\n        }\n        catch (error) {\n            res.writeHead(415);\n            res.end();\n            debug('Failed to parse request body:', error);\n            return;\n        }\n        await updateHandler(update, res);\n    };\n}\nexports.default = default_1;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAME,KAAK,GAAG,CAAC,GAAGH,OAAO,CAACI,OAAZ,EAAqB,kBAArB,CAAd;;AACA,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,aAA7B,EAA4C;EACxC,OAAO,gBAAOC,GAAP,EAAYC,GAAZ,EAID;IAAA,IAJkBC,IAIlB,uEAJyB,MAAM;MACjCD,GAAG,CAACE,UAAJ,GAAiB,GAAjB;MACAR,KAAK,CAAC,2BAAD,EAA8BM,GAAG,CAACE,UAAlC,CAAL;MACAF,GAAG,CAACG,GAAJ;IACH,CAAK;IACFT,KAAK,CAAC,kBAAD,EAAqBK,GAAG,CAACK,MAAzB,EAAiCL,GAAG,CAACM,GAArC,CAAL,CADE,CAEF;;IACA,IAAIN,GAAG,CAACK,MAAJ,KAAe,MAAf,IAAyB,CAACX,WAAW,CAACI,QAAD,EAAWE,GAAG,CAACM,GAAf,CAAzC,EAA8D;MAC1D,OAAOJ,IAAI,EAAX;IACH;;IACD,IAAIK,MAAJ;;IACA,IAAIP,GAAG,CAACQ,IAAJ,IAAY,IAAhB,EAAsB;MAClBD,MAAM,GAAGP,GAAG,CAACQ,IAAb;MACA,MAAMT,aAAa,CAACQ,MAAD,EAASN,GAAT,CAAnB;MACA;IACH;;IACD,IAAIO,IAAI,GAAG,EAAX;;IACA,WAAW,MAAMC,KAAjB,IAA0BT,GAA1B,EAA+B;MAC3BQ,IAAI,IAAIE,MAAM,CAACD,KAAD,CAAd;IACH;;IACD,IAAI;MACAF,MAAM,GAAGI,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAT;IACH,CAFD,CAGA,OAAOK,KAAP,EAAc;MACVZ,GAAG,CAACa,SAAJ,CAAc,GAAd;MACAb,GAAG,CAACG,GAAJ;MACAT,KAAK,CAAC,+BAAD,EAAkCkB,KAAlC,CAAL;MACA;IACH;;IACD,MAAMd,aAAa,CAACQ,MAAD,EAASN,GAAT,CAAnB;EACH,CA9BD;AA+BH;;AACDX,OAAO,CAACM,OAAR,GAAkBC,SAAlB"},"metadata":{},"sourceType":"script"}